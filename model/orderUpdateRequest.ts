/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ChargeRequest } from './chargeRequest';
import { CheckoutRequest } from './checkoutRequest';
import { CustomerShippingContacts } from './customerShippingContacts';
import { OrderDiscountLinesRequest } from './orderDiscountLinesRequest';
import { OrderRequestCustomerInfo } from './orderRequestCustomerInfo';
import { OrderTaxRequest } from './orderTaxRequest';
import { Product } from './product';
import { ShippingRequest } from './shippingRequest';

/**
* a order
*/
export class OrderUpdateRequest {
    'charges'?: Array<ChargeRequest>;
    'checkout'?: CheckoutRequest;
    /**
    * Currency with which the payment will be made. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)
    */
    'currency'?: string;
    'customerInfo'?: OrderRequestCustomerInfo;
    /**
    * List of [discounts](https://developers.conekta.com/v2.1.0/reference/orderscreatediscountline) that are applied to the order. You must have at least one discount.
    */
    'discountLines'?: Array<OrderDiscountLinesRequest>;
    /**
    * List of [products](https://developers.conekta.com/v2.1.0/reference/orderscreateproduct) that are sold in the order. You must have at least one product.
    */
    'lineItems'?: Array<Product>;
    'metadata'?: { [key: string]: string; };
    /**
    * Indicates whether the order charges must be preauthorized
    */
    'preAuthorize'?: boolean = false;
    'shippingContact'?: CustomerShippingContacts;
    /**
    * List of [shipping costs](https://developers.conekta.com/v2.1.0/reference/orderscreateshipping). If the online store offers digital products.
    */
    'shippingLines'?: Array<ShippingRequest>;
    'taxLines'?: Array<OrderTaxRequest>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "charges",
            "baseName": "charges",
            "type": "Array<ChargeRequest>"
        },
        {
            "name": "checkout",
            "baseName": "checkout",
            "type": "CheckoutRequest"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "customerInfo",
            "baseName": "customer_info",
            "type": "OrderRequestCustomerInfo"
        },
        {
            "name": "discountLines",
            "baseName": "discount_lines",
            "type": "Array<OrderDiscountLinesRequest>"
        },
        {
            "name": "lineItems",
            "baseName": "line_items",
            "type": "Array<Product>"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "preAuthorize",
            "baseName": "pre_authorize",
            "type": "boolean"
        },
        {
            "name": "shippingContact",
            "baseName": "shipping_contact",
            "type": "CustomerShippingContacts"
        },
        {
            "name": "shippingLines",
            "baseName": "shipping_lines",
            "type": "Array<ShippingRequest>"
        },
        {
            "name": "taxLines",
            "baseName": "tax_lines",
            "type": "Array<OrderTaxRequest>"
        }    ];

    static getAttributeTypeMap() {
        return OrderUpdateRequest.attributeTypeMap;
    }
}

