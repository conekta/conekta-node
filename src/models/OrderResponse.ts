/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChargeOrderResponseChannel } from './ChargeOrderResponseChannel';
import {
    ChargeOrderResponseChannelFromJSON,
    ChargeOrderResponseChannelFromJSONTyped,
    ChargeOrderResponseChannelToJSON,
} from './ChargeOrderResponseChannel';
import type { OrderResponseCharges } from './OrderResponseCharges';
import {
    OrderResponseChargesFromJSON,
    OrderResponseChargesFromJSONTyped,
    OrderResponseChargesToJSON,
} from './OrderResponseCharges';
import type { OrderResponseCheckout } from './OrderResponseCheckout';
import {
    OrderResponseCheckoutFromJSON,
    OrderResponseCheckoutFromJSONTyped,
    OrderResponseCheckoutToJSON,
} from './OrderResponseCheckout';
import type { OrderResponseCustomerInfo } from './OrderResponseCustomerInfo';
import {
    OrderResponseCustomerInfoFromJSON,
    OrderResponseCustomerInfoFromJSONTyped,
    OrderResponseCustomerInfoToJSON,
} from './OrderResponseCustomerInfo';
import type { OrderResponseDiscountLines } from './OrderResponseDiscountLines';
import {
    OrderResponseDiscountLinesFromJSON,
    OrderResponseDiscountLinesFromJSONTyped,
    OrderResponseDiscountLinesToJSON,
} from './OrderResponseDiscountLines';
import type { OrderResponseFiscalEntity } from './OrderResponseFiscalEntity';
import {
    OrderResponseFiscalEntityFromJSON,
    OrderResponseFiscalEntityFromJSONTyped,
    OrderResponseFiscalEntityToJSON,
} from './OrderResponseFiscalEntity';
import type { OrderResponseProducts } from './OrderResponseProducts';
import {
    OrderResponseProductsFromJSON,
    OrderResponseProductsFromJSONTyped,
    OrderResponseProductsToJSON,
} from './OrderResponseProducts';
import type { OrderResponseShippingContact } from './OrderResponseShippingContact';
import {
    OrderResponseShippingContactFromJSON,
    OrderResponseShippingContactFromJSONTyped,
    OrderResponseShippingContactToJSON,
} from './OrderResponseShippingContact';

/**
 * order response
 * @export
 * @interface OrderResponse
 */
export interface OrderResponse {
    /**
     * The total amount to be collected in cents
     * @type {number}
     * @memberof OrderResponse
     */
    amount?: number;
    /**
     * The total amount refunded in cents
     * @type {number}
     * @memberof OrderResponse
     */
    amountRefunded?: number;
    /**
     * 
     * @type {ChargeOrderResponseChannel}
     * @memberof OrderResponse
     */
    channel?: ChargeOrderResponseChannel;
    /**
     * 
     * @type {OrderResponseCharges}
     * @memberof OrderResponse
     */
    charges?: OrderResponseCharges;
    /**
     * 
     * @type {OrderResponseCheckout}
     * @memberof OrderResponse
     */
    checkout?: OrderResponseCheckout;
    /**
     * The time at which the object was created in seconds since the Unix epoch
     * @type {number}
     * @memberof OrderResponse
     */
    createdAt?: number;
    /**
     * The three-letter ISO 4217 currency code. The currency of the order.
     * @type {string}
     * @memberof OrderResponse
     */
    currency?: string;
    /**
     * 
     * @type {OrderResponseCustomerInfo}
     * @memberof OrderResponse
     */
    customerInfo?: OrderResponseCustomerInfo;
    /**
     * 
     * @type {OrderResponseDiscountLines}
     * @memberof OrderResponse
     */
    discountLines?: OrderResponseDiscountLines;
    /**
     * 
     * @type {OrderResponseFiscalEntity}
     * @memberof OrderResponse
     */
    fiscalEntity?: OrderResponseFiscalEntity;
    /**
     * 
     * @type {string}
     * @memberof OrderResponse
     */
    id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrderResponse
     */
    isRefundable?: boolean;
    /**
     * 
     * @type {OrderResponseProducts}
     * @memberof OrderResponse
     */
    lineItems?: OrderResponseProducts;
    /**
     * Whether the object exists in live mode or test mode
     * @type {boolean}
     * @memberof OrderResponse
     */
    livemode?: boolean;
    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     * @type {{ [key: string]: any; }}
     * @memberof OrderResponse
     */
    metadata?: { [key: string]: any; };
    /**
     * String representing the objectâ€™s type. Objects of the same type share the same value.
     * @type {string}
     * @memberof OrderResponse
     */
    object?: string;
    /**
     * The payment status of the order.
     * @type {string}
     * @memberof OrderResponse
     */
    paymentStatus?: string;
    /**
     * 
     * @type {OrderResponseShippingContact}
     * @memberof OrderResponse
     */
    shippingContact?: OrderResponseShippingContact;
    /**
     * The time at which the object was last updated in seconds since the Unix epoch
     * @type {number}
     * @memberof OrderResponse
     */
    updatedAt?: number;
}

/**
 * Check if a given object implements the OrderResponse interface.
 */
export function instanceOfOrderResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderResponseFromJSON(json: any): OrderResponse {
    return OrderResponseFromJSONTyped(json, false);
}

export function OrderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'amountRefunded': !exists(json, 'amount_refunded') ? undefined : json['amount_refunded'],
        'channel': !exists(json, 'channel') ? undefined : ChargeOrderResponseChannelFromJSON(json['channel']),
        'charges': !exists(json, 'charges') ? undefined : OrderResponseChargesFromJSON(json['charges']),
        'checkout': !exists(json, 'checkout') ? undefined : OrderResponseCheckoutFromJSON(json['checkout']),
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'customerInfo': !exists(json, 'customer_info') ? undefined : OrderResponseCustomerInfoFromJSON(json['customer_info']),
        'discountLines': !exists(json, 'discount_lines') ? undefined : OrderResponseDiscountLinesFromJSON(json['discount_lines']),
        'fiscalEntity': !exists(json, 'fiscal_entity') ? undefined : OrderResponseFiscalEntityFromJSON(json['fiscal_entity']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isRefundable': !exists(json, 'is_refundable') ? undefined : json['is_refundable'],
        'lineItems': !exists(json, 'line_items') ? undefined : OrderResponseProductsFromJSON(json['line_items']),
        'livemode': !exists(json, 'livemode') ? undefined : json['livemode'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'paymentStatus': !exists(json, 'payment_status') ? undefined : json['payment_status'],
        'shippingContact': !exists(json, 'shipping_contact') ? undefined : OrderResponseShippingContactFromJSON(json['shipping_contact']),
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
    };
}

export function OrderResponseToJSON(value?: OrderResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'amount_refunded': value.amountRefunded,
        'channel': ChargeOrderResponseChannelToJSON(value.channel),
        'charges': OrderResponseChargesToJSON(value.charges),
        'checkout': OrderResponseCheckoutToJSON(value.checkout),
        'created_at': value.createdAt,
        'currency': value.currency,
        'customer_info': OrderResponseCustomerInfoToJSON(value.customerInfo),
        'discount_lines': OrderResponseDiscountLinesToJSON(value.discountLines),
        'fiscal_entity': OrderResponseFiscalEntityToJSON(value.fiscalEntity),
        'id': value.id,
        'is_refundable': value.isRefundable,
        'line_items': OrderResponseProductsToJSON(value.lineItems),
        'livemode': value.livemode,
        'metadata': value.metadata,
        'object': value.object,
        'payment_status': value.paymentStatus,
        'shipping_contact': OrderResponseShippingContactToJSON(value.shippingContact),
        'updated_at': value.updatedAt,
    };
}

