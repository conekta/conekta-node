/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Address of the person who will receive the order
 * @export
 * @interface CustomerShippingContactsAddress
 */
export interface CustomerShippingContactsAddress {
    /**
     * 
     * @type {string}
     * @memberof CustomerShippingContactsAddress
     */
    street1?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerShippingContactsAddress
     */
    street2?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerShippingContactsAddress
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerShippingContactsAddress
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerShippingContactsAddress
     */
    state?: string;
    /**
     * this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
     * @type {string}
     * @memberof CustomerShippingContactsAddress
     */
    country?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerShippingContactsAddress
     */
    residential?: boolean | null;
}

/**
 * Check if a given object implements the CustomerShippingContactsAddress interface.
 */
export function instanceOfCustomerShippingContactsAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerShippingContactsAddressFromJSON(json: any): CustomerShippingContactsAddress {
    return CustomerShippingContactsAddressFromJSONTyped(json, false);
}

export function CustomerShippingContactsAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerShippingContactsAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'street1': !exists(json, 'street1') ? undefined : json['street1'],
        'street2': !exists(json, 'street2') ? undefined : json['street2'],
        'postalCode': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'residential': !exists(json, 'residential') ? undefined : json['residential'],
    };
}

export function CustomerShippingContactsAddressToJSON(value?: CustomerShippingContactsAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'street1': value.street1,
        'street2': value.street2,
        'postal_code': value.postalCode,
        'city': value.city,
        'state': value.state,
        'country': value.country,
        'residential': value.residential,
    };
}

