/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * plans model
 * @export
 * @interface PlanResponse
 */
export interface PlanResponse {
    /**
     * 
     * @type {number}
     * @memberof PlanResponse
     */
    amount?: number;
    /**
     * 
     * @type {number}
     * @memberof PlanResponse
     */
    createdAt?: number;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    currency?: string;
    /**
     * 
     * @type {number}
     * @memberof PlanResponse
     */
    expiryCount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PlanResponse
     */
    frequency?: number;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    interval?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PlanResponse
     */
    livemode?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PlanResponse
     */
    object?: string;
    /**
     * 
     * @type {number}
     * @memberof PlanResponse
     */
    trialPeriodDays?: number | null;
}

/**
 * Check if a given object implements the PlanResponse interface.
 */
export function instanceOfPlanResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PlanResponseFromJSON(json: any): PlanResponse {
    return PlanResponseFromJSONTyped(json, false);
}

export function PlanResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlanResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'expiryCount': !exists(json, 'expiry_count') ? undefined : json['expiry_count'],
        'frequency': !exists(json, 'frequency') ? undefined : json['frequency'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'interval': !exists(json, 'interval') ? undefined : json['interval'],
        'livemode': !exists(json, 'livemode') ? undefined : json['livemode'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'trialPeriodDays': !exists(json, 'trial_period_days') ? undefined : json['trial_period_days'],
    };
}

export function PlanResponseToJSON(value?: PlanResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'created_at': value.createdAt,
        'currency': value.currency,
        'expiry_count': value.expiryCount,
        'frequency': value.frequency,
        'id': value.id,
        'interval': value.interval,
        'livemode': value.livemode,
        'name': value.name,
        'object': value.object,
        'trial_period_days': value.trialPeriodDays,
    };
}

