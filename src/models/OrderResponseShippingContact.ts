/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomerShippingContactsResponseAddress } from './CustomerShippingContactsResponseAddress';
import {
    CustomerShippingContactsResponseAddressFromJSON,
    CustomerShippingContactsResponseAddressFromJSONTyped,
    CustomerShippingContactsResponseAddressToJSON,
} from './CustomerShippingContactsResponseAddress';

/**
 * 
 * @export
 * @interface OrderResponseShippingContact
 */
export interface OrderResponseShippingContact {
    /**
     * 
     * @type {number}
     * @memberof OrderResponseShippingContact
     */
    createdAt?: number;
    /**
     * 
     * @type {string}
     * @memberof OrderResponseShippingContact
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderResponseShippingContact
     */
    object?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderResponseShippingContact
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderResponseShippingContact
     */
    receiver?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderResponseShippingContact
     */
    betweenStreets?: string | null;
    /**
     * 
     * @type {CustomerShippingContactsResponseAddress}
     * @memberof OrderResponseShippingContact
     */
    address?: CustomerShippingContactsResponseAddress;
    /**
     * 
     * @type {string}
     * @memberof OrderResponseShippingContact
     */
    parentId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrderResponseShippingContact
     */
    _default?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrderResponseShippingContact
     */
    deleted?: boolean;
}

/**
 * Check if a given object implements the OrderResponseShippingContact interface.
 */
export function instanceOfOrderResponseShippingContact(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderResponseShippingContactFromJSON(json: any): OrderResponseShippingContact {
    return OrderResponseShippingContactFromJSONTyped(json, false);
}

export function OrderResponseShippingContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderResponseShippingContact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'receiver': !exists(json, 'receiver') ? undefined : json['receiver'],
        'betweenStreets': !exists(json, 'between_streets') ? undefined : json['between_streets'],
        'address': !exists(json, 'address') ? undefined : CustomerShippingContactsResponseAddressFromJSON(json['address']),
        'parentId': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
    };
}

export function OrderResponseShippingContactToJSON(value?: OrderResponseShippingContact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.createdAt,
        'id': value.id,
        'object': value.object,
        'phone': value.phone,
        'receiver': value.receiver,
        'between_streets': value.betweenStreets,
        'address': CustomerShippingContactsResponseAddressToJSON(value.address),
        'parent_id': value.parentId,
        'default': value._default,
        'deleted': value.deleted,
    };
}

