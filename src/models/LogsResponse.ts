/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LogsResponseData } from './LogsResponseData';
import {
    LogsResponseDataFromJSON,
    LogsResponseDataFromJSONTyped,
    LogsResponseDataToJSON,
} from './LogsResponseData';

/**
 * logs model
 * @export
 * @interface LogsResponse
 */
export interface LogsResponse {
    /**
     * True, if there are more pages.
     * @type {boolean}
     * @memberof LogsResponse
     */
    readonly hasMore?: boolean;
    /**
     * The object type
     * @type {string}
     * @memberof LogsResponse
     */
    readonly object?: string;
    /**
     * URL of the next page.
     * @type {string}
     * @memberof LogsResponse
     */
    nextPageUrl?: string | null;
    /**
     * Url of the previous page.
     * @type {string}
     * @memberof LogsResponse
     */
    previousPageUrl?: string | null;
    /**
     * set to page results.
     * @type {Array<LogsResponseData>}
     * @memberof LogsResponse
     */
    data?: Array<LogsResponseData> | null;
}

/**
 * Check if a given object implements the LogsResponse interface.
 */
export function instanceOfLogsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LogsResponseFromJSON(json: any): LogsResponse {
    return LogsResponseFromJSONTyped(json, false);
}

export function LogsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LogsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hasMore': !exists(json, 'has_more') ? undefined : json['has_more'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'nextPageUrl': !exists(json, 'next_page_url') ? undefined : json['next_page_url'],
        'previousPageUrl': !exists(json, 'previous_page_url') ? undefined : json['previous_page_url'],
        'data': !exists(json, 'data') ? undefined : (json['data'] === null ? null : (json['data'] as Array<any>).map(LogsResponseDataFromJSON)),
    };
}

export function LogsResponseToJSON(value?: LogsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'next_page_url': value.nextPageUrl,
        'previous_page_url': value.previousPageUrl,
        'data': value.data === undefined ? undefined : (value.data === null ? null : (value.data as Array<any>).map(LogsResponseDataToJSON)),
    };
}

