/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Company payout destination model
 * @export
 * @interface CompanyPayoutDestinationResponse
 */
export interface CompanyPayoutDestinationResponse {
    /**
     * The resource's type
     * @type {string}
     * @memberof CompanyPayoutDestinationResponse
     */
    object?: CompanyPayoutDestinationResponseObjectEnum;
    /**
     * currency of the receiving account
     * @type {string}
     * @memberof CompanyPayoutDestinationResponse
     */
    currency?: string;
    /**
     * Name of the account holder
     * @type {string}
     * @memberof CompanyPayoutDestinationResponse
     */
    accountHolderName?: string;
    /**
     * Name of the bank
     * @type {string}
     * @memberof CompanyPayoutDestinationResponse
     */
    bank?: string;
    /**
     * Type of the payout destination
     * @type {string}
     * @memberof CompanyPayoutDestinationResponse
     */
    type?: CompanyPayoutDestinationResponseTypeEnum;
    /**
     * Account number of the receiving account
     * @type {string}
     * @memberof CompanyPayoutDestinationResponse
     */
    accountNumber?: string;
}


/**
 * @export
 */
export const CompanyPayoutDestinationResponseObjectEnum = {
    PayoutDestination: 'payout_destination'
} as const;
export type CompanyPayoutDestinationResponseObjectEnum = typeof CompanyPayoutDestinationResponseObjectEnum[keyof typeof CompanyPayoutDestinationResponseObjectEnum];

/**
 * @export
 */
export const CompanyPayoutDestinationResponseTypeEnum = {
    BankAccount: 'bank_account'
} as const;
export type CompanyPayoutDestinationResponseTypeEnum = typeof CompanyPayoutDestinationResponseTypeEnum[keyof typeof CompanyPayoutDestinationResponseTypeEnum];


/**
 * Check if a given object implements the CompanyPayoutDestinationResponse interface.
 */
export function instanceOfCompanyPayoutDestinationResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CompanyPayoutDestinationResponseFromJSON(json: any): CompanyPayoutDestinationResponse {
    return CompanyPayoutDestinationResponseFromJSONTyped(json, false);
}

export function CompanyPayoutDestinationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyPayoutDestinationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'object': !exists(json, 'object') ? undefined : json['object'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'accountHolderName': !exists(json, 'account_holder_name') ? undefined : json['account_holder_name'],
        'bank': !exists(json, 'bank') ? undefined : json['bank'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'accountNumber': !exists(json, 'account_number') ? undefined : json['account_number'],
    };
}

export function CompanyPayoutDestinationResponseToJSON(value?: CompanyPayoutDestinationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'object': value.object,
        'currency': value.currency,
        'account_holder_name': value.accountHolderName,
        'bank': value.bank,
        'type': value.type,
        'account_number': value.accountNumber,
    };
}

