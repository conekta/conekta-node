/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChargeResponseRefundsData } from './ChargeResponseRefundsData';
import {
    ChargeResponseRefundsDataFromJSON,
    ChargeResponseRefundsDataFromJSONTyped,
    ChargeResponseRefundsDataToJSON,
} from './ChargeResponseRefundsData';

/**
 * 
 * @export
 * @interface ChargeResponseRefundsAllOf
 */
export interface ChargeResponseRefundsAllOf {
    /**
     * 
     * @type {Array<ChargeResponseRefundsData>}
     * @memberof ChargeResponseRefundsAllOf
     */
    data?: Array<ChargeResponseRefundsData>;
}

/**
 * Check if a given object implements the ChargeResponseRefundsAllOf interface.
 */
export function instanceOfChargeResponseRefundsAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChargeResponseRefundsAllOfFromJSON(json: any): ChargeResponseRefundsAllOf {
    return ChargeResponseRefundsAllOfFromJSONTyped(json, false);
}

export function ChargeResponseRefundsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeResponseRefundsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(ChargeResponseRefundsDataFromJSON)),
    };
}

export function ChargeResponseRefundsAllOfToJSON(value?: ChargeResponseRefundsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(ChargeResponseRefundsDataToJSON)),
    };
}

