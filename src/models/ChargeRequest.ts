/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChargeRequestPaymentMethod } from './ChargeRequestPaymentMethod';
import {
    ChargeRequestPaymentMethodFromJSON,
    ChargeRequestPaymentMethodFromJSONTyped,
    ChargeRequestPaymentMethodToJSON,
} from './ChargeRequestPaymentMethod';

/**
 * The charges to be made
 * @export
 * @interface ChargeRequest
 */
export interface ChargeRequest {
    /**
     * 
     * @type {number}
     * @memberof ChargeRequest
     */
    amount?: number;
    /**
     * How many months without interest to apply, it can be 3, 6, 9, 12 or 18
     * @type {number}
     * @memberof ChargeRequest
     */
    monthlyInstallments?: number;
    /**
     * 
     * @type {ChargeRequestPaymentMethod}
     * @memberof ChargeRequest
     */
    paymentMethod: ChargeRequestPaymentMethod;
    /**
     * Custom reference to add to the charge
     * @type {string}
     * @memberof ChargeRequest
     */
    referenceId?: string;
}

/**
 * Check if a given object implements the ChargeRequest interface.
 */
export function instanceOfChargeRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "paymentMethod" in value;

    return isInstance;
}

export function ChargeRequestFromJSON(json: any): ChargeRequest {
    return ChargeRequestFromJSONTyped(json, false);
}

export function ChargeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'monthlyInstallments': !exists(json, 'monthly_installments') ? undefined : json['monthly_installments'],
        'paymentMethod': ChargeRequestPaymentMethodFromJSON(json['payment_method']),
        'referenceId': !exists(json, 'reference_id') ? undefined : json['reference_id'],
    };
}

export function ChargeRequestToJSON(value?: ChargeRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'monthly_installments': value.monthlyInstallments,
        'payment_method': ChargeRequestPaymentMethodToJSON(value.paymentMethod),
        'reference_id': value.referenceId,
    };
}

