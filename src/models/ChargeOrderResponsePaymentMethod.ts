/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    PaymentMethodBankTransfer,
    instanceOfPaymentMethodBankTransfer,
    PaymentMethodBankTransferFromJSON,
    PaymentMethodBankTransferFromJSONTyped,
    PaymentMethodBankTransferToJSON,
} from './PaymentMethodBankTransfer';
import {
    PaymentMethodCard,
    instanceOfPaymentMethodCard,
    PaymentMethodCardFromJSON,
    PaymentMethodCardFromJSONTyped,
    PaymentMethodCardToJSON,
} from './PaymentMethodCard';
import {
    PaymentMethodCash,
    instanceOfPaymentMethodCash,
    PaymentMethodCashFromJSON,
    PaymentMethodCashFromJSONTyped,
    PaymentMethodCashToJSON,
} from './PaymentMethodCash';

/**
 * @type ChargeOrderResponsePaymentMethod
 * 
 * @export
 */
export type ChargeOrderResponsePaymentMethod = { object: 'bank_transfer_payment' } & PaymentMethodBankTransfer | { object: 'card_payment' } & PaymentMethodCard | { object: 'cash_payment' } & PaymentMethodCash;

export function ChargeOrderResponsePaymentMethodFromJSON(json: any): ChargeOrderResponsePaymentMethod {
    return ChargeOrderResponsePaymentMethodFromJSONTyped(json, false);
}

export function ChargeOrderResponsePaymentMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChargeOrderResponsePaymentMethod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['object']) {
        case 'bank_transfer_payment':
            return {...PaymentMethodBankTransferFromJSONTyped(json, true), object: 'bank_transfer_payment'};
        case 'card_payment':
            return {...PaymentMethodCardFromJSONTyped(json, true), object: 'card_payment'};
        case 'cash_payment':
            return {...PaymentMethodCashFromJSONTyped(json, true), object: 'cash_payment'};
        default:
            throw new Error(`No variant of ChargeOrderResponsePaymentMethod exists with 'object=${json['object']}'`);
    }
}

export function ChargeOrderResponsePaymentMethodToJSON(value?: ChargeOrderResponsePaymentMethod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['object']) {
        case 'bank_transfer_payment':
            return PaymentMethodBankTransferToJSON(value);
        case 'card_payment':
            return PaymentMethodCardToJSON(value);
        case 'cash_payment':
            return PaymentMethodCashToJSON(value);
        default:
            throw new Error(`No variant of ChargeOrderResponsePaymentMethod exists with 'object=${value['object']}'`);
    }

}

