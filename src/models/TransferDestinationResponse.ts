/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Method used to make the transfer.
 * @export
 * @interface TransferDestinationResponse
 */
export interface TransferDestinationResponse {
    /**
     * Name of the account holder.
     * @type {string}
     * @memberof TransferDestinationResponse
     */
    accountHolder?: string;
    /**
     * Account number of the bank account.
     * @type {string}
     * @memberof TransferDestinationResponse
     */
    accountNumber?: string;
    /**
     * Name of the bank.
     * @type {string}
     * @memberof TransferDestinationResponse
     */
    bank?: string;
    /**
     * Date and time of creation of the transfer.
     * @type {number}
     * @memberof TransferDestinationResponse
     */
    createdAt?: number;
    /**
     * Unique identifier of the transfer.
     * @type {string}
     * @memberof TransferDestinationResponse
     */
    id?: string;
    /**
     * Object name, which is bank_transfer_payout_method.
     * @type {string}
     * @memberof TransferDestinationResponse
     */
    object?: string;
    /**
     * Unique identifier of the payee.
     * @type {string}
     * @memberof TransferDestinationResponse
     */
    payeeId?: string;
    /**
     * Type of the payee.
     * @type {string}
     * @memberof TransferDestinationResponse
     */
    type?: string;
}

/**
 * Check if a given object implements the TransferDestinationResponse interface.
 */
export function instanceOfTransferDestinationResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransferDestinationResponseFromJSON(json: any): TransferDestinationResponse {
    return TransferDestinationResponseFromJSONTyped(json, false);
}

export function TransferDestinationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferDestinationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountHolder': !exists(json, 'account_holder') ? undefined : json['account_holder'],
        'accountNumber': !exists(json, 'account_number') ? undefined : json['account_number'],
        'bank': !exists(json, 'bank') ? undefined : json['bank'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'payeeId': !exists(json, 'payee_id') ? undefined : json['payee_id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function TransferDestinationResponseToJSON(value?: TransferDestinationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_holder': value.accountHolder,
        'account_number': value.accountNumber,
        'bank': value.bank,
        'created_at': value.createdAt,
        'id': value.id,
        'object': value.object,
        'payee_id': value.payeeId,
        'type': value.type,
    };
}

