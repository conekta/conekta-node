/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GetPlansResponse, PlanRequest, PlanResponse, PlanUpdateRequest } from '../models';
export interface CreatePlanRequest {
    planRequest: PlanRequest;
    acceptLanguage?: CreatePlanAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface DeletePlanRequest {
    id: string;
    acceptLanguage?: DeletePlanAcceptLanguageEnum;
}
export interface GetPlanRequest {
    id: string;
    acceptLanguage?: GetPlanAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetPlansRequest {
    acceptLanguage?: GetPlansAcceptLanguageEnum;
    xChildCompanyId?: string;
    limit?: number;
    search?: string;
    next?: string;
    previous?: string;
}
export interface UpdatePlanRequest {
    id: string;
    planUpdateRequest: PlanUpdateRequest;
    acceptLanguage?: UpdatePlanAcceptLanguageEnum;
    xChildCompanyId?: string;
}
/**
 *
 */
export declare class PlansApi extends runtime.BaseAPI {
    /**
     * Create a new plan for an existing order
     * Create Plan
     */
    createPlanRaw(requestParameters: CreatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PlanResponse>>;
    /**
     * Create a new plan for an existing order
     * Create Plan
     */
    createPlan(requestParameters: CreatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PlanResponse>;
    /**
     * Delete Plan
     */
    deletePlanRaw(requestParameters: DeletePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PlanResponse>>;
    /**
     * Delete Plan
     */
    deletePlan(requestParameters: DeletePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PlanResponse>;
    /**
     * Get Plan
     */
    getPlanRaw(requestParameters: GetPlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PlanResponse>>;
    /**
     * Get Plan
     */
    getPlan(requestParameters: GetPlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PlanResponse>;
    /**
     * Get A List of Plans
     */
    getPlansRaw(requestParameters: GetPlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetPlansResponse>>;
    /**
     * Get A List of Plans
     */
    getPlans(requestParameters?: GetPlansRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetPlansResponse>;
    /**
     * Update Plan
     */
    updatePlanRaw(requestParameters: UpdatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PlanResponse>>;
    /**
     * Update Plan
     */
    updatePlan(requestParameters: UpdatePlanRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PlanResponse>;
}
/**
 * @export
 */
export declare const CreatePlanAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CreatePlanAcceptLanguageEnum = typeof CreatePlanAcceptLanguageEnum[keyof typeof CreatePlanAcceptLanguageEnum];
/**
 * @export
 */
export declare const DeletePlanAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type DeletePlanAcceptLanguageEnum = typeof DeletePlanAcceptLanguageEnum[keyof typeof DeletePlanAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetPlanAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetPlanAcceptLanguageEnum = typeof GetPlanAcceptLanguageEnum[keyof typeof GetPlanAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetPlansAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetPlansAcceptLanguageEnum = typeof GetPlansAcceptLanguageEnum[keyof typeof GetPlansAcceptLanguageEnum];
/**
 * @export
 */
export declare const UpdatePlanAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type UpdatePlanAcceptLanguageEnum = typeof UpdatePlanAcceptLanguageEnum[keyof typeof UpdatePlanAcceptLanguageEnum];
