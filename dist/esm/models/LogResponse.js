/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
/**
 * Check if a given object implements the LogResponse interface.
 */
export function instanceOfLogResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "livemode" in value;
    return isInstance;
}
export function LogResponseFromJSON(json) {
    return LogResponseFromJSONTyped(json, false);
}
export function LogResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'createdAt': json['created_at'],
        'id': json['id'],
        'ipAddress': !exists(json, 'ip_address') ? undefined : json['ip_address'],
        'livemode': json['livemode'],
        'loggableId': !exists(json, 'loggable_id') ? undefined : json['loggable_id'],
        'loggableType': !exists(json, 'loggable_type') ? undefined : json['loggable_type'],
        'method': !exists(json, 'method') ? undefined : json['method'],
        'oauthTokenId': !exists(json, 'oauth_token_id') ? undefined : json['oauth_token_id'],
        'queryString': !exists(json, 'query_string') ? undefined : json['query_string'],
        'related': !exists(json, 'related') ? undefined : json['related'],
        'requestBody': !exists(json, 'request_body') ? undefined : json['request_body'],
        'requestHeaders': !exists(json, 'request_headers') ? undefined : json['request_headers'],
        'responseBody': !exists(json, 'response_body') ? undefined : json['response_body'],
        'responseHeaders': !exists(json, 'response_headers') ? undefined : json['response_headers'],
        'searchableTags': !exists(json, 'searchable_tags') ? undefined : json['searchable_tags'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'userAccountId': !exists(json, 'user_account_id') ? undefined : json['user_account_id'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}
export function LogResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'created_at': value.createdAt,
        'id': value.id,
        'ip_address': value.ipAddress,
        'livemode': value.livemode,
        'loggable_id': value.loggableId,
        'loggable_type': value.loggableType,
        'method': value.method,
        'oauth_token_id': value.oauthTokenId,
        'query_string': value.queryString,
        'related': value.related,
        'request_body': value.requestBody,
        'request_headers': value.requestHeaders,
        'response_body': value.responseBody,
        'response_headers': value.responseHeaders,
        'searchable_tags': value.searchableTags,
        'status': value.status,
        'updated_at': value.updatedAt,
        'url': value.url,
        'user_account_id': value.userAccountId,
        'version': value.version,
    };
}
