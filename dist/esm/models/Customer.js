/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { CustomerAntifraudInfoFromJSON, CustomerAntifraudInfoToJSON, } from './CustomerAntifraudInfo';
import { CustomerFiscalEntitiesRequestFromJSON, CustomerFiscalEntitiesRequestToJSON, } from './CustomerFiscalEntitiesRequest';
import { CustomerPaymentMethodsRequestFromJSON, CustomerPaymentMethodsRequestToJSON, } from './CustomerPaymentMethodsRequest';
import { CustomerShippingContactsFromJSON, CustomerShippingContactsToJSON, } from './CustomerShippingContacts';
import { SubscriptionRequestFromJSON, SubscriptionRequestToJSON, } from './SubscriptionRequest';
/**
 * Check if a given object implements the Customer interface.
 */
export function instanceOfCustomer(value) {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "phone" in value;
    return isInstance;
}
export function CustomerFromJSON(json) {
    return CustomerFromJSONTyped(json, false);
}
export function CustomerFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'antifraudInfo': !exists(json, 'antifraud_info') ? undefined : CustomerAntifraudInfoFromJSON(json['antifraud_info']),
        'corporate': !exists(json, 'corporate') ? undefined : json['corporate'],
        'customReference': !exists(json, 'custom_reference') ? undefined : json['custom_reference'],
        'email': json['email'],
        'defaultPaymentSourceId': !exists(json, 'default_payment_source_id') ? undefined : json['default_payment_source_id'],
        'defaultShippingContactId': !exists(json, 'default_shipping_contact_id') ? undefined : json['default_shipping_contact_id'],
        'fiscalEntities': !exists(json, 'fiscal_entities') ? undefined : (json['fiscal_entities'].map(CustomerFiscalEntitiesRequestFromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'name': json['name'],
        'paymentSources': !exists(json, 'payment_sources') ? undefined : (json['payment_sources'].map(CustomerPaymentMethodsRequestFromJSON)),
        'phone': json['phone'],
        'planId': !exists(json, 'plan_id') ? undefined : json['plan_id'],
        'shippingContacts': !exists(json, 'shipping_contacts') ? undefined : (json['shipping_contacts'].map(CustomerShippingContactsFromJSON)),
        'subscription': !exists(json, 'subscription') ? undefined : SubscriptionRequestFromJSON(json['subscription']),
    };
}
export function CustomerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'antifraud_info': CustomerAntifraudInfoToJSON(value.antifraudInfo),
        'corporate': value.corporate,
        'custom_reference': value.customReference,
        'email': value.email,
        'default_payment_source_id': value.defaultPaymentSourceId,
        'default_shipping_contact_id': value.defaultShippingContactId,
        'fiscal_entities': value.fiscalEntities === undefined ? undefined : (value.fiscalEntities.map(CustomerFiscalEntitiesRequestToJSON)),
        'metadata': value.metadata,
        'name': value.name,
        'payment_sources': value.paymentSources === undefined ? undefined : (value.paymentSources.map(CustomerPaymentMethodsRequestToJSON)),
        'phone': value.phone,
        'plan_id': value.planId,
        'shipping_contacts': value.shippingContacts === undefined ? undefined : (value.shippingContacts.map(CustomerShippingContactsToJSON)),
        'subscription': SubscriptionRequestToJSON(value.subscription),
    };
}
