/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CheckoutOrderTemplate } from './CheckoutOrderTemplate';
/**
 * It is a sub-resource of the Order model that can be stipulated in order to configure its corresponding checkout
 * @export
 * @interface Checkout
 */
export interface Checkout {
    /**
     * Those are the payment methods that will be available for the link
     * @type {Array<string>}
     * @memberof Checkout
     */
    allowedPaymentMethods: Array<string>;
    /**
     * It is the time when the link will expire. It is expressed in seconds since the Unix epoch.
     * The valid range is from 2 to 365 days (the valid range will be taken from the next day of the creation date at 00:01 hrs)
     * @type {number}
     * @memberof Checkout
     */
    expiresAt: number;
    /**
     * This flag allows you to specify if months without interest will be active.
     * @type {boolean}
     * @memberof Checkout
     */
    monthlyInstallmentsEnabled?: boolean;
    /**
     * This field allows you to specify the number of months without interest.
     * @type {Array<number>}
     * @memberof Checkout
     */
    monthlyInstallmentsOptions?: Array<number>;
    /**
     * Reason for charge
     * @type {string}
     * @memberof Checkout
     */
    name: string;
    /**
     * This flag allows you to fill in the shipping information at checkout.
     * @type {boolean}
     * @memberof Checkout
     */
    needsShippingContact?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Checkout
     */
    onDemandEnabled?: boolean | null;
    /**
     *
     * @type {CheckoutOrderTemplate}
     * @memberof Checkout
     */
    orderTemplate: CheckoutOrderTemplate;
    /**
     *
     * @type {number}
     * @memberof Checkout
     */
    paymentsLimitCount?: number;
    /**
     * false: single use. true: multiple payments
     * @type {boolean}
     * @memberof Checkout
     */
    recurrent: boolean;
    /**
     *
     * @type {string}
     * @memberof Checkout
     */
    type: string;
}
/**
 * Check if a given object implements the Checkout interface.
 */
export declare function instanceOfCheckout(value: object): boolean;
export declare function CheckoutFromJSON(json: any): Checkout;
export declare function CheckoutFromJSONTyped(json: any, ignoreDiscriminator: boolean): Checkout;
export declare function CheckoutToJSON(value?: Checkout | null): any;
