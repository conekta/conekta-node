/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CustomerFiscalEntitiesRequest } from './CustomerFiscalEntitiesRequest';
import type { CustomerPaymentMethodsRequest } from './CustomerPaymentMethodsRequest';
import type { CustomerShippingContacts } from './CustomerShippingContacts';
import type { SubscriptionRequest } from './SubscriptionRequest';
import type { UpdateCustomerAntifraudInfo } from './UpdateCustomerAntifraudInfo';
/**
 * update customer
 * @export
 * @interface UpdateCustomer
 */
export interface UpdateCustomer {
    /**
     *
     * @type {UpdateCustomerAntifraudInfo}
     * @memberof UpdateCustomer
     */
    antifraudInfo?: UpdateCustomerAntifraudInfo | null;
    /**
     * It is a parameter that allows to identify in the response, the Conekta ID of a payment method (payment_id)
     * @type {string}
     * @memberof UpdateCustomer
     */
    defaultPaymentSourceId?: string;
    /**
     * An email address is a series of customizable characters followed by a universal Internet symbol, the at symbol (@), the name of a host server, and a web domain ending (.mx, .com, .org, . net, etc).
     * @type {string}
     * @memberof UpdateCustomer
     */
    email?: string;
    /**
     * Client's name
     * @type {string}
     * @memberof UpdateCustomer
     */
    name?: string;
    /**
     * Is the customer's phone number
     * @type {string}
     * @memberof UpdateCustomer
     */
    phone?: string;
    /**
     * Contains the ID of a plan, which could together with name, email and phone create a client directly to a subscription
     * @type {string}
     * @memberof UpdateCustomer
     */
    planId?: string;
    /**
     * It is a parameter that allows to identify in the response, the Conekta ID of the shipping address (shipping_contact)
     * @type {string}
     * @memberof UpdateCustomer
     */
    defaultShippingContactId?: string;
    /**
     * It is a value that allows identifying if the email is corporate or not.
     * @type {boolean}
     * @memberof UpdateCustomer
     */
    corporate?: boolean;
    /**
     * It is an undefined value.
     * @type {string}
     * @memberof UpdateCustomer
     */
    customReference?: string;
    /**
     *
     * @type {Array<CustomerFiscalEntitiesRequest>}
     * @memberof UpdateCustomer
     */
    fiscalEntities?: Array<CustomerFiscalEntitiesRequest>;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof UpdateCustomer
     */
    metadata?: {
        [key: string]: any;
    };
    /**
     * Contains details of the payment methods that the customer has active or has used in Conekta
     * @type {Array<CustomerPaymentMethodsRequest>}
     * @memberof UpdateCustomer
     */
    paymentSources?: Array<CustomerPaymentMethodsRequest>;
    /**
     * Contains the detail of the shipping addresses that the client has active or has used in Conekta
     * @type {Array<CustomerShippingContacts>}
     * @memberof UpdateCustomer
     */
    shippingContacts?: Array<CustomerShippingContacts>;
    /**
     *
     * @type {SubscriptionRequest}
     * @memberof UpdateCustomer
     */
    subscription?: SubscriptionRequest;
}
/**
 * Check if a given object implements the UpdateCustomer interface.
 */
export declare function instanceOfUpdateCustomer(value: object): boolean;
export declare function UpdateCustomerFromJSON(json: any): UpdateCustomer;
export declare function UpdateCustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCustomer;
export declare function UpdateCustomerToJSON(value?: UpdateCustomer | null): any;
