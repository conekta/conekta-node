/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ChargeRequestFromJSON, ChargeRequestToJSON, } from './ChargeRequest';
import { CheckoutRequestFromJSON, CheckoutRequestToJSON, } from './CheckoutRequest';
import { CustomerShippingContactsFromJSON, CustomerShippingContactsToJSON, } from './CustomerShippingContacts';
import { OrderDiscountLinesRequestFromJSON, OrderDiscountLinesRequestToJSON, } from './OrderDiscountLinesRequest';
import { OrderRequestCustomerInfoFromJSON, OrderRequestCustomerInfoToJSON, } from './OrderRequestCustomerInfo';
import { OrderTaxRequestFromJSON, OrderTaxRequestToJSON, } from './OrderTaxRequest';
import { ProductFromJSON, ProductToJSON, } from './Product';
import { ShippingRequestFromJSON, ShippingRequestToJSON, } from './ShippingRequest';
/**
 * Check if a given object implements the OrderUpdateRequest interface.
 */
export function instanceOfOrderUpdateRequest(value) {
    let isInstance = true;
    return isInstance;
}
export function OrderUpdateRequestFromJSON(json) {
    return OrderUpdateRequestFromJSONTyped(json, false);
}
export function OrderUpdateRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'charges': !exists(json, 'charges') ? undefined : (json['charges'].map(ChargeRequestFromJSON)),
        'checkout': !exists(json, 'checkout') ? undefined : CheckoutRequestFromJSON(json['checkout']),
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'customerInfo': !exists(json, 'customer_info') ? undefined : OrderRequestCustomerInfoFromJSON(json['customer_info']),
        'discountLines': !exists(json, 'discount_lines') ? undefined : (json['discount_lines'].map(OrderDiscountLinesRequestFromJSON)),
        'lineItems': !exists(json, 'line_items') ? undefined : (json['line_items'].map(ProductFromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'preAuthorize': !exists(json, 'pre_authorize') ? undefined : json['pre_authorize'],
        'shippingContact': !exists(json, 'shipping_contact') ? undefined : CustomerShippingContactsFromJSON(json['shipping_contact']),
        'shippingLines': !exists(json, 'shipping_lines') ? undefined : (json['shipping_lines'].map(ShippingRequestFromJSON)),
        'taxLines': !exists(json, 'tax_lines') ? undefined : (json['tax_lines'].map(OrderTaxRequestFromJSON)),
    };
}
export function OrderUpdateRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'charges': value.charges === undefined ? undefined : (value.charges.map(ChargeRequestToJSON)),
        'checkout': CheckoutRequestToJSON(value.checkout),
        'currency': value.currency,
        'customer_info': OrderRequestCustomerInfoToJSON(value.customerInfo),
        'discount_lines': value.discountLines === undefined ? undefined : (value.discountLines.map(OrderDiscountLinesRequestToJSON)),
        'line_items': value.lineItems === undefined ? undefined : (value.lineItems.map(ProductToJSON)),
        'metadata': value.metadata,
        'pre_authorize': value.preAuthorize,
        'shipping_contact': CustomerShippingContactsToJSON(value.shippingContact),
        'shipping_lines': value.shippingLines === undefined ? undefined : (value.shippingLines.map(ShippingRequestToJSON)),
        'tax_lines': value.taxLines === undefined ? undefined : (value.taxLines.map(OrderTaxRequestToJSON)),
    };
}
