/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { WebhookLogFromJSON, WebhookLogToJSON, } from './WebhookLog';
/**
 * Check if a given object implements the EventResponse interface.
 */
export function instanceOfEventResponse(value) {
    let isInstance = true;
    return isInstance;
}
export function EventResponseFromJSON(json) {
    return EventResponseFromJSONTyped(json, false);
}
export function EventResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'livemode': !exists(json, 'livemode') ? undefined : json['livemode'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'webhookLogs': !exists(json, 'webhook_logs') ? undefined : (json['webhook_logs'].map(WebhookLogFromJSON)),
        'webhookStatus': !exists(json, 'webhook_status') ? undefined : json['webhook_status'],
    };
}
export function EventResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'created_at': value.createdAt,
        'data': value.data,
        'id': value.id,
        'livemode': value.livemode,
        'object': value.object,
        'type': value.type,
        'webhook_logs': value.webhookLogs === undefined ? undefined : (value.webhookLogs.map(WebhookLogToJSON)),
        'webhook_status': value.webhookStatus,
    };
}
