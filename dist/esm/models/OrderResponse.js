/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ChargeOrderResponseChannelFromJSON, ChargeOrderResponseChannelToJSON, } from './ChargeOrderResponseChannel';
import { OrderResponseChargesFromJSON, OrderResponseChargesToJSON, } from './OrderResponseCharges';
import { OrderResponseCheckoutFromJSON, OrderResponseCheckoutToJSON, } from './OrderResponseCheckout';
import { OrderResponseCustomerInfoFromJSON, OrderResponseCustomerInfoToJSON, } from './OrderResponseCustomerInfo';
import { OrderResponseDiscountLinesFromJSON, OrderResponseDiscountLinesToJSON, } from './OrderResponseDiscountLines';
import { OrderResponseFiscalEntityFromJSON, OrderResponseFiscalEntityToJSON, } from './OrderResponseFiscalEntity';
import { OrderResponseProductsFromJSON, OrderResponseProductsToJSON, } from './OrderResponseProducts';
import { OrderResponseShippingContactFromJSON, OrderResponseShippingContactToJSON, } from './OrderResponseShippingContact';
/**
 * Check if a given object implements the OrderResponse interface.
 */
export function instanceOfOrderResponse(value) {
    let isInstance = true;
    return isInstance;
}
export function OrderResponseFromJSON(json) {
    return OrderResponseFromJSONTyped(json, false);
}
export function OrderResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'amountRefunded': !exists(json, 'amount_refunded') ? undefined : json['amount_refunded'],
        'channel': !exists(json, 'channel') ? undefined : ChargeOrderResponseChannelFromJSON(json['channel']),
        'charges': !exists(json, 'charges') ? undefined : OrderResponseChargesFromJSON(json['charges']),
        'checkout': !exists(json, 'checkout') ? undefined : OrderResponseCheckoutFromJSON(json['checkout']),
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'customerInfo': !exists(json, 'customer_info') ? undefined : OrderResponseCustomerInfoFromJSON(json['customer_info']),
        'discountLines': !exists(json, 'discount_lines') ? undefined : OrderResponseDiscountLinesFromJSON(json['discount_lines']),
        'fiscalEntity': !exists(json, 'fiscal_entity') ? undefined : OrderResponseFiscalEntityFromJSON(json['fiscal_entity']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isRefundable': !exists(json, 'is_refundable') ? undefined : json['is_refundable'],
        'lineItems': !exists(json, 'line_items') ? undefined : OrderResponseProductsFromJSON(json['line_items']),
        'livemode': !exists(json, 'livemode') ? undefined : json['livemode'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'object': !exists(json, 'object') ? undefined : json['object'],
        'paymentStatus': !exists(json, 'payment_status') ? undefined : json['payment_status'],
        'shippingContact': !exists(json, 'shipping_contact') ? undefined : OrderResponseShippingContactFromJSON(json['shipping_contact']),
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
    };
}
export function OrderResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'amount': value.amount,
        'amount_refunded': value.amountRefunded,
        'channel': ChargeOrderResponseChannelToJSON(value.channel),
        'charges': OrderResponseChargesToJSON(value.charges),
        'checkout': OrderResponseCheckoutToJSON(value.checkout),
        'created_at': value.createdAt,
        'currency': value.currency,
        'customer_info': OrderResponseCustomerInfoToJSON(value.customerInfo),
        'discount_lines': OrderResponseDiscountLinesToJSON(value.discountLines),
        'fiscal_entity': OrderResponseFiscalEntityToJSON(value.fiscalEntity),
        'id': value.id,
        'is_refundable': value.isRefundable,
        'line_items': OrderResponseProductsToJSON(value.lineItems),
        'livemode': value.livemode,
        'metadata': value.metadata,
        'object': value.object,
        'payment_status': value.paymentStatus,
        'shipping_contact': OrderResponseShippingContactToJSON(value.shippingContact),
        'updated_at': value.updatedAt,
    };
}
