/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { DiscountLinesResponse, OrderDiscountLinesRequest, UpdateOrderDiscountLinesRequest } from '../models';
export interface OrdersCreateDiscountLineRequest {
    id: string;
    orderDiscountLinesRequest: OrderDiscountLinesRequest;
    acceptLanguage?: OrdersCreateDiscountLineAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface OrdersDeleteDiscountLinesRequest {
    id: string;
    discountLinesId: string;
    acceptLanguage?: OrdersDeleteDiscountLinesAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface OrdersUpdateDiscountLinesRequest {
    id: string;
    discountLinesId: string;
    updateOrderDiscountLinesRequest: UpdateOrderDiscountLinesRequest;
    acceptLanguage?: OrdersUpdateDiscountLinesAcceptLanguageEnum;
    xChildCompanyId?: string;
}
/**
 *
 */
export declare class DiscountsApi extends runtime.BaseAPI {
    /**
     * Create discount lines for an existing orden
     * Create Discount
     */
    ordersCreateDiscountLineRaw(requestParameters: OrdersCreateDiscountLineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountLinesResponse>>;
    /**
     * Create discount lines for an existing orden
     * Create Discount
     */
    ordersCreateDiscountLine(requestParameters: OrdersCreateDiscountLineRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountLinesResponse>;
    /**
     * Delete an existing discount lines for an existing orden
     * Delete Discount
     */
    ordersDeleteDiscountLinesRaw(requestParameters: OrdersDeleteDiscountLinesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountLinesResponse>>;
    /**
     * Delete an existing discount lines for an existing orden
     * Delete Discount
     */
    ordersDeleteDiscountLines(requestParameters: OrdersDeleteDiscountLinesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountLinesResponse>;
    /**
     * Update an existing discount lines for an existing orden
     * Update Discount
     */
    ordersUpdateDiscountLinesRaw(requestParameters: OrdersUpdateDiscountLinesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountLinesResponse>>;
    /**
     * Update an existing discount lines for an existing orden
     * Update Discount
     */
    ordersUpdateDiscountLines(requestParameters: OrdersUpdateDiscountLinesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountLinesResponse>;
}
/**
 * @export
 */
export declare const OrdersCreateDiscountLineAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type OrdersCreateDiscountLineAcceptLanguageEnum = typeof OrdersCreateDiscountLineAcceptLanguageEnum[keyof typeof OrdersCreateDiscountLineAcceptLanguageEnum];
/**
 * @export
 */
export declare const OrdersDeleteDiscountLinesAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type OrdersDeleteDiscountLinesAcceptLanguageEnum = typeof OrdersDeleteDiscountLinesAcceptLanguageEnum[keyof typeof OrdersDeleteDiscountLinesAcceptLanguageEnum];
/**
 * @export
 */
export declare const OrdersUpdateDiscountLinesAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type OrdersUpdateDiscountLinesAcceptLanguageEnum = typeof OrdersUpdateDiscountLinesAcceptLanguageEnum[keyof typeof OrdersUpdateDiscountLinesAcceptLanguageEnum];
