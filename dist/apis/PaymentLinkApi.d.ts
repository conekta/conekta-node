/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Checkout, CheckoutResponse, CheckoutsResponse, EmailCheckoutRequest, SmsCheckoutRequest } from '../models';
export interface CancelCheckoutRequest {
    id: string;
    acceptLanguage?: CancelCheckoutAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface CreateCheckoutRequest {
    checkout: Checkout;
    acceptLanguage?: CreateCheckoutAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface EmailCheckoutOperationRequest {
    id: string;
    emailCheckoutRequest: EmailCheckoutRequest;
    acceptLanguage?: EmailCheckoutOperationAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetCheckoutRequest {
    id: string;
    acceptLanguage?: GetCheckoutAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetCheckoutsRequest {
    acceptLanguage?: GetCheckoutsAcceptLanguageEnum;
    xChildCompanyId?: string;
    limit?: number;
    search?: string;
    next?: string;
    previous?: string;
}
export interface SmsCheckoutOperationRequest {
    id: string;
    smsCheckoutRequest: SmsCheckoutRequest;
    acceptLanguage?: SmsCheckoutOperationAcceptLanguageEnum;
    xChildCompanyId?: string;
}
/**
 *
 */
export declare class PaymentLinkApi extends runtime.BaseAPI {
    /**
     * Cancel Payment Link
     */
    cancelCheckoutRaw(requestParameters: CancelCheckoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutResponse>>;
    /**
     * Cancel Payment Link
     */
    cancelCheckout(requestParameters: CancelCheckoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutResponse>;
    /**
     * Create Unique Payment Link
     */
    createCheckoutRaw(requestParameters: CreateCheckoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutResponse>>;
    /**
     * Create Unique Payment Link
     */
    createCheckout(requestParameters: CreateCheckoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutResponse>;
    /**
     * Send an email
     */
    emailCheckoutRaw(requestParameters: EmailCheckoutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutResponse>>;
    /**
     * Send an email
     */
    emailCheckout(requestParameters: EmailCheckoutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutResponse>;
    /**
     * Get a payment link by ID
     */
    getCheckoutRaw(requestParameters: GetCheckoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutResponse>>;
    /**
     * Get a payment link by ID
     */
    getCheckout(requestParameters: GetCheckoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutResponse>;
    /**
     * Returns a list of links generated by the merchant
     * Get a list of payment links
     */
    getCheckoutsRaw(requestParameters: GetCheckoutsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutsResponse>>;
    /**
     * Returns a list of links generated by the merchant
     * Get a list of payment links
     */
    getCheckouts(requestParameters?: GetCheckoutsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutsResponse>;
    /**
     * Send an sms
     */
    smsCheckoutRaw(requestParameters: SmsCheckoutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutResponse>>;
    /**
     * Send an sms
     */
    smsCheckout(requestParameters: SmsCheckoutOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutResponse>;
}
/**
 * @export
 */
export declare const CancelCheckoutAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CancelCheckoutAcceptLanguageEnum = typeof CancelCheckoutAcceptLanguageEnum[keyof typeof CancelCheckoutAcceptLanguageEnum];
/**
 * @export
 */
export declare const CreateCheckoutAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CreateCheckoutAcceptLanguageEnum = typeof CreateCheckoutAcceptLanguageEnum[keyof typeof CreateCheckoutAcceptLanguageEnum];
/**
 * @export
 */
export declare const EmailCheckoutOperationAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type EmailCheckoutOperationAcceptLanguageEnum = typeof EmailCheckoutOperationAcceptLanguageEnum[keyof typeof EmailCheckoutOperationAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetCheckoutAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetCheckoutAcceptLanguageEnum = typeof GetCheckoutAcceptLanguageEnum[keyof typeof GetCheckoutAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetCheckoutsAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetCheckoutsAcceptLanguageEnum = typeof GetCheckoutsAcceptLanguageEnum[keyof typeof GetCheckoutsAcceptLanguageEnum];
/**
 * @export
 */
export declare const SmsCheckoutOperationAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type SmsCheckoutOperationAcceptLanguageEnum = typeof SmsCheckoutOperationAcceptLanguageEnum[keyof typeof SmsCheckoutOperationAcceptLanguageEnum];
