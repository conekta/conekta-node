/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { GetOrdersResponse, OrderCaptureRequest, OrderRefundRequest, OrderRequest, OrderResponse, OrderUpdateRequest } from '../models';
export interface CancelOrderRequest {
    id: string;
    acceptLanguage?: CancelOrderAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface CreateOrderRequest {
    orderRequest: OrderRequest;
    acceptLanguage?: CreateOrderAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetOrderByIdRequest {
    id: string;
    acceptLanguage?: GetOrderByIdAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetOrdersRequest {
    acceptLanguage?: GetOrdersAcceptLanguageEnum;
    xChildCompanyId?: string;
    limit?: number;
    search?: string;
    next?: string;
    previous?: string;
}
export interface OrderCancelRefundRequest {
    id: string;
    refundId: string;
    acceptLanguage?: OrderCancelRefundAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface OrderRefundOperationRequest {
    id: string;
    orderRefundRequest: OrderRefundRequest;
    acceptLanguage?: OrderRefundOperationAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface OrdersCreateCaptureRequest {
    id: string;
    acceptLanguage?: OrdersCreateCaptureAcceptLanguageEnum;
    xChildCompanyId?: string;
    orderCaptureRequest?: OrderCaptureRequest;
}
export interface UpdateOrderRequest {
    id: string;
    orderUpdateRequest: OrderUpdateRequest;
    acceptLanguage?: UpdateOrderAcceptLanguageEnum;
}
/**
 *
 */
export declare class OrdersApi extends runtime.BaseAPI {
    /**
     * Cancel an order that has been previously created.
     * Cancel Order
     */
    cancelOrderRaw(requestParameters: CancelOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponse>>;
    /**
     * Cancel an order that has been previously created.
     * Cancel Order
     */
    cancelOrder(requestParameters: CancelOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponse>;
    /**
     * Create a new order.
     * Create order
     */
    createOrderRaw(requestParameters: CreateOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponse>>;
    /**
     * Create a new order.
     * Create order
     */
    createOrder(requestParameters: CreateOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponse>;
    /**
     * Info for a specific order
     * Get Order
     */
    getOrderByIdRaw(requestParameters: GetOrderByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponse>>;
    /**
     * Info for a specific order
     * Get Order
     */
    getOrderById(requestParameters: GetOrderByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponse>;
    /**
     * Get order details in the form of a list
     * Get a list of Orders
     */
    getOrdersRaw(requestParameters: GetOrdersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetOrdersResponse>>;
    /**
     * Get order details in the form of a list
     * Get a list of Orders
     */
    getOrders(requestParameters?: GetOrdersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetOrdersResponse>;
    /**
     * A refunded order describes the items, amount, and reason an order is being refunded.
     * Cancel Refund
     */
    orderCancelRefundRaw(requestParameters: OrderCancelRefundRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponse>>;
    /**
     * A refunded order describes the items, amount, and reason an order is being refunded.
     * Cancel Refund
     */
    orderCancelRefund(requestParameters: OrderCancelRefundRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponse>;
    /**
     * A refunded order describes the items, amount, and reason an order is being refunded.
     * Refund Order
     */
    orderRefundRaw(requestParameters: OrderRefundOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponse>>;
    /**
     * A refunded order describes the items, amount, and reason an order is being refunded.
     * Refund Order
     */
    orderRefund(requestParameters: OrderRefundOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponse>;
    /**
     * Processes an order that has been previously authorized.
     * Capture Order
     */
    ordersCreateCaptureRaw(requestParameters: OrdersCreateCaptureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponse>>;
    /**
     * Processes an order that has been previously authorized.
     * Capture Order
     */
    ordersCreateCapture(requestParameters: OrdersCreateCaptureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponse>;
    /**
     * Update an existing Order.
     * Update Order
     */
    updateOrderRaw(requestParameters: UpdateOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrderResponse>>;
    /**
     * Update an existing Order.
     * Update Order
     */
    updateOrder(requestParameters: UpdateOrderRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrderResponse>;
}
/**
 * @export
 */
export declare const CancelOrderAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CancelOrderAcceptLanguageEnum = typeof CancelOrderAcceptLanguageEnum[keyof typeof CancelOrderAcceptLanguageEnum];
/**
 * @export
 */
export declare const CreateOrderAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CreateOrderAcceptLanguageEnum = typeof CreateOrderAcceptLanguageEnum[keyof typeof CreateOrderAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetOrderByIdAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetOrderByIdAcceptLanguageEnum = typeof GetOrderByIdAcceptLanguageEnum[keyof typeof GetOrderByIdAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetOrdersAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetOrdersAcceptLanguageEnum = typeof GetOrdersAcceptLanguageEnum[keyof typeof GetOrdersAcceptLanguageEnum];
/**
 * @export
 */
export declare const OrderCancelRefundAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type OrderCancelRefundAcceptLanguageEnum = typeof OrderCancelRefundAcceptLanguageEnum[keyof typeof OrderCancelRefundAcceptLanguageEnum];
/**
 * @export
 */
export declare const OrderRefundOperationAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type OrderRefundOperationAcceptLanguageEnum = typeof OrderRefundOperationAcceptLanguageEnum[keyof typeof OrderRefundOperationAcceptLanguageEnum];
/**
 * @export
 */
export declare const OrdersCreateCaptureAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type OrdersCreateCaptureAcceptLanguageEnum = typeof OrdersCreateCaptureAcceptLanguageEnum[keyof typeof OrdersCreateCaptureAcceptLanguageEnum];
/**
 * @export
 */
export declare const UpdateOrderAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type UpdateOrderAcceptLanguageEnum = typeof UpdateOrderAcceptLanguageEnum[keyof typeof UpdateOrderAcceptLanguageEnum];
