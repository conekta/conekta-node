/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateCustomerFiscalEntitiesResponse, Customer, CustomerFiscalEntitiesRequest, CustomerResponse, CustomerUpdateFiscalEntitiesRequest, CustomersResponse, UpdateCustomer, UpdateCustomerFiscalEntitiesResponse } from '../models';
export interface CreateCustomerRequest {
    customer: Customer;
    acceptLanguage?: CreateCustomerAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface CreateCustomerFiscalEntitiesRequest {
    id: string;
    customerFiscalEntitiesRequest: CustomerFiscalEntitiesRequest;
    acceptLanguage?: CreateCustomerFiscalEntitiesAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface DeleteCustomerByIdRequest {
    id: string;
    acceptLanguage?: DeleteCustomerByIdAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetCustomerByIdRequest {
    id: string;
    acceptLanguage?: GetCustomerByIdAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetCustomersRequest {
    acceptLanguage?: GetCustomersAcceptLanguageEnum;
    xChildCompanyId?: string;
    limit?: number;
    search?: string;
    next?: string;
    previous?: string;
}
export interface UpdateCustomerRequest {
    id: string;
    updateCustomer: UpdateCustomer;
    acceptLanguage?: UpdateCustomerAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface UpdateCustomerFiscalEntitiesRequest {
    id: string;
    fiscalEntitiesId: string;
    customerUpdateFiscalEntitiesRequest: CustomerUpdateFiscalEntitiesRequest;
    acceptLanguage?: UpdateCustomerFiscalEntitiesAcceptLanguageEnum;
    xChildCompanyId?: string;
}
/**
 *
 */
export declare class CustomersApi extends runtime.BaseAPI {
    /**
     * The purpose of business is to create and keep a customer, you will learn what elements you need to create a customer. Remember the credit and debit card tokenization process: [https://developers.conekta.com/page/web-checkout-tokenizer](https://developers.conekta.com/page/web-checkout-tokenizer)
     * Create customer
     */
    createCustomerRaw(requestParameters: CreateCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomerResponse>>;
    /**
     * The purpose of business is to create and keep a customer, you will learn what elements you need to create a customer. Remember the credit and debit card tokenization process: [https://developers.conekta.com/page/web-checkout-tokenizer](https://developers.conekta.com/page/web-checkout-tokenizer)
     * Create customer
     */
    createCustomer(requestParameters: CreateCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomerResponse>;
    /**
     * Create Fiscal entity resource that corresponds to a customer ID.
     * Create Fiscal Entity
     */
    createCustomerFiscalEntitiesRaw(requestParameters: CreateCustomerFiscalEntitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateCustomerFiscalEntitiesResponse>>;
    /**
     * Create Fiscal entity resource that corresponds to a customer ID.
     * Create Fiscal Entity
     */
    createCustomerFiscalEntities(requestParameters: CreateCustomerFiscalEntitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateCustomerFiscalEntitiesResponse>;
    /**
     * Deleted a customer resource that corresponds to a customer ID.
     * Delete Customer
     */
    deleteCustomerByIdRaw(requestParameters: DeleteCustomerByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomerResponse>>;
    /**
     * Deleted a customer resource that corresponds to a customer ID.
     * Delete Customer
     */
    deleteCustomerById(requestParameters: DeleteCustomerByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomerResponse>;
    /**
     * Gets a customer resource that corresponds to a customer ID.
     * Get Customer
     */
    getCustomerByIdRaw(requestParameters: GetCustomerByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomerResponse>>;
    /**
     * Gets a customer resource that corresponds to a customer ID.
     * Get Customer
     */
    getCustomerById(requestParameters: GetCustomerByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomerResponse>;
    /**
     * The purpose of business is to create and maintain a client, you will learn what elements you need to obtain a list of clients, which can be paged.
     * Get a list of customers
     */
    getCustomersRaw(requestParameters: GetCustomersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomersResponse>>;
    /**
     * The purpose of business is to create and maintain a client, you will learn what elements you need to obtain a list of clients, which can be paged.
     * Get a list of customers
     */
    getCustomers(requestParameters?: GetCustomersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomersResponse>;
    /**
     * You can update customer-related data
     * Update customer
     */
    updateCustomerRaw(requestParameters: UpdateCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomerResponse>>;
    /**
     * You can update customer-related data
     * Update customer
     */
    updateCustomer(requestParameters: UpdateCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomerResponse>;
    /**
     * Update Fiscal Entity resource that corresponds to a customer ID.
     * Update  Fiscal Entity
     */
    updateCustomerFiscalEntitiesRaw(requestParameters: UpdateCustomerFiscalEntitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UpdateCustomerFiscalEntitiesResponse>>;
    /**
     * Update Fiscal Entity resource that corresponds to a customer ID.
     * Update  Fiscal Entity
     */
    updateCustomerFiscalEntities(requestParameters: UpdateCustomerFiscalEntitiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UpdateCustomerFiscalEntitiesResponse>;
}
/**
 * @export
 */
export declare const CreateCustomerAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CreateCustomerAcceptLanguageEnum = typeof CreateCustomerAcceptLanguageEnum[keyof typeof CreateCustomerAcceptLanguageEnum];
/**
 * @export
 */
export declare const CreateCustomerFiscalEntitiesAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CreateCustomerFiscalEntitiesAcceptLanguageEnum = typeof CreateCustomerFiscalEntitiesAcceptLanguageEnum[keyof typeof CreateCustomerFiscalEntitiesAcceptLanguageEnum];
/**
 * @export
 */
export declare const DeleteCustomerByIdAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type DeleteCustomerByIdAcceptLanguageEnum = typeof DeleteCustomerByIdAcceptLanguageEnum[keyof typeof DeleteCustomerByIdAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetCustomerByIdAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetCustomerByIdAcceptLanguageEnum = typeof GetCustomerByIdAcceptLanguageEnum[keyof typeof GetCustomerByIdAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetCustomersAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetCustomersAcceptLanguageEnum = typeof GetCustomersAcceptLanguageEnum[keyof typeof GetCustomersAcceptLanguageEnum];
/**
 * @export
 */
export declare const UpdateCustomerAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type UpdateCustomerAcceptLanguageEnum = typeof UpdateCustomerAcceptLanguageEnum[keyof typeof UpdateCustomerAcceptLanguageEnum];
/**
 * @export
 */
export declare const UpdateCustomerFiscalEntitiesAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type UpdateCustomerFiscalEntitiesAcceptLanguageEnum = typeof UpdateCustomerFiscalEntitiesAcceptLanguageEnum[keyof typeof UpdateCustomerFiscalEntitiesAcceptLanguageEnum];
