/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CompanyResponse, GetCompaniesResponse } from '../models';
export interface GetCompaniesRequest {
    acceptLanguage?: GetCompaniesAcceptLanguageEnum;
    limit?: number;
    search?: string;
    next?: string;
    previous?: string;
}
export interface GetCompanyRequest {
    id: string;
    acceptLanguage?: GetCompanyAcceptLanguageEnum;
}
/**
 *
 */
export declare class CompaniesApi extends runtime.BaseAPI {
    /**
     * Consume the list of child companies.  This is used for holding companies with several child entities.
     * Get List of Companies
     */
    getCompaniesRaw(requestParameters: GetCompaniesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCompaniesResponse>>;
    /**
     * Consume the list of child companies.  This is used for holding companies with several child entities.
     * Get List of Companies
     */
    getCompanies(requestParameters?: GetCompaniesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCompaniesResponse>;
    /**
     * Get Company
     */
    getCompanyRaw(requestParameters: GetCompanyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompanyResponse>>;
    /**
     * Get Company
     */
    getCompany(requestParameters: GetCompanyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompanyResponse>;
}
/**
 * @export
 */
export declare const GetCompaniesAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetCompaniesAcceptLanguageEnum = typeof GetCompaniesAcceptLanguageEnum[keyof typeof GetCompaniesAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetCompanyAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetCompanyAcceptLanguageEnum = typeof GetCompanyAcceptLanguageEnum[keyof typeof GetCompanyAcceptLanguageEnum];
