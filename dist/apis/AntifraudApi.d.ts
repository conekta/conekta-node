/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BlacklistRuleResponse, CreateRiskRulesData, DeletedBlacklistRuleResponse, DeletedWhitelistRuleResponse, RiskRulesList, WhitelistlistRuleResponse } from '../models';
export interface CreateRuleBlacklistRequest {
    createRiskRulesData: CreateRiskRulesData;
    acceptLanguage?: CreateRuleBlacklistAcceptLanguageEnum;
}
export interface CreateRuleWhitelistRequest {
    acceptLanguage?: CreateRuleWhitelistAcceptLanguageEnum;
    createRiskRulesData?: CreateRiskRulesData;
}
export interface DeleteRuleBlacklistRequest {
    id: string;
    acceptLanguage?: DeleteRuleBlacklistAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface DeleteRuleWhitelistRequest {
    id: string;
    acceptLanguage?: DeleteRuleWhitelistAcceptLanguageEnum;
    xChildCompanyId?: string;
}
export interface GetRuleBlacklistRequest {
    acceptLanguage?: GetRuleBlacklistAcceptLanguageEnum;
}
export interface GetRuleWhitelistRequest {
    acceptLanguage?: GetRuleWhitelistAcceptLanguageEnum;
}
/**
 *
 */
export declare class AntifraudApi extends runtime.BaseAPI {
    /**
     * Create blacklisted rule
     */
    createRuleBlacklistRaw(requestParameters: CreateRuleBlacklistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BlacklistRuleResponse>>;
    /**
     * Create blacklisted rule
     */
    createRuleBlacklist(requestParameters: CreateRuleBlacklistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BlacklistRuleResponse>;
    /**
     * Create whitelisted rule
     */
    createRuleWhitelistRaw(requestParameters: CreateRuleWhitelistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WhitelistlistRuleResponse>>;
    /**
     * Create whitelisted rule
     */
    createRuleWhitelist(requestParameters?: CreateRuleWhitelistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WhitelistlistRuleResponse>;
    /**
     * Delete blacklisted rule
     */
    deleteRuleBlacklistRaw(requestParameters: DeleteRuleBlacklistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeletedBlacklistRuleResponse>>;
    /**
     * Delete blacklisted rule
     */
    deleteRuleBlacklist(requestParameters: DeleteRuleBlacklistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeletedBlacklistRuleResponse>;
    /**
     * Delete whitelisted rule
     */
    deleteRuleWhitelistRaw(requestParameters: DeleteRuleWhitelistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DeletedWhitelistRuleResponse>>;
    /**
     * Delete whitelisted rule
     */
    deleteRuleWhitelist(requestParameters: DeleteRuleWhitelistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DeletedWhitelistRuleResponse>;
    /**
     * Return all rules
     * Get list of blacklisted rules
     */
    getRuleBlacklistRaw(requestParameters: GetRuleBlacklistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RiskRulesList>>;
    /**
     * Return all rules
     * Get list of blacklisted rules
     */
    getRuleBlacklist(requestParameters?: GetRuleBlacklistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RiskRulesList>;
    /**
     * Return all rules
     * Get a list of whitelisted rules
     */
    getRuleWhitelistRaw(requestParameters: GetRuleWhitelistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RiskRulesList>>;
    /**
     * Return all rules
     * Get a list of whitelisted rules
     */
    getRuleWhitelist(requestParameters?: GetRuleWhitelistRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RiskRulesList>;
}
/**
 * @export
 */
export declare const CreateRuleBlacklistAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CreateRuleBlacklistAcceptLanguageEnum = typeof CreateRuleBlacklistAcceptLanguageEnum[keyof typeof CreateRuleBlacklistAcceptLanguageEnum];
/**
 * @export
 */
export declare const CreateRuleWhitelistAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type CreateRuleWhitelistAcceptLanguageEnum = typeof CreateRuleWhitelistAcceptLanguageEnum[keyof typeof CreateRuleWhitelistAcceptLanguageEnum];
/**
 * @export
 */
export declare const DeleteRuleBlacklistAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type DeleteRuleBlacklistAcceptLanguageEnum = typeof DeleteRuleBlacklistAcceptLanguageEnum[keyof typeof DeleteRuleBlacklistAcceptLanguageEnum];
/**
 * @export
 */
export declare const DeleteRuleWhitelistAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type DeleteRuleWhitelistAcceptLanguageEnum = typeof DeleteRuleWhitelistAcceptLanguageEnum[keyof typeof DeleteRuleWhitelistAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetRuleBlacklistAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetRuleBlacklistAcceptLanguageEnum = typeof GetRuleBlacklistAcceptLanguageEnum[keyof typeof GetRuleBlacklistAcceptLanguageEnum];
/**
 * @export
 */
export declare const GetRuleWhitelistAcceptLanguageEnum: {
    readonly Es: "es";
    readonly En: "en";
};
export type GetRuleWhitelistAcceptLanguageEnum = typeof GetRuleWhitelistAcceptLanguageEnum[keyof typeof GetRuleWhitelistAcceptLanguageEnum];
