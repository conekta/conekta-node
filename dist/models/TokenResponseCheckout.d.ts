/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TokenResponseCheckout
 */
export interface TokenResponseCheckout {
    /**
     *
     * @type {Array<string>}
     * @memberof TokenResponseCheckout
     */
    allowedPaymentMethods?: Array<string>;
    /**
     * Indicates if the checkout can not expire.
     * @type {boolean}
     * @memberof TokenResponseCheckout
     */
    canNotExpire?: boolean;
    /**
     *
     * @type {number}
     * @memberof TokenResponseCheckout
     */
    emailsSent?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof TokenResponseCheckout
     */
    excludeCardNetworks?: Array<string>;
    /**
     * Date and time when the checkout expires.
     * @type {number}
     * @memberof TokenResponseCheckout
     */
    expiresAt?: number;
    /**
     * URL to redirect the customer to if the payment process fails.
     * @type {string}
     * @memberof TokenResponseCheckout
     */
    failureUrl?: string;
    /**
     * Indicates if the checkout forces the 3DS flow.
     * @type {boolean}
     * @memberof TokenResponseCheckout
     */
    force3dsFlow?: boolean;
    /**
     *
     * @type {string}
     * @memberof TokenResponseCheckout
     */
    id?: string;
    /**
     *
     * @type {boolean}
     * @memberof TokenResponseCheckout
     */
    livemode?: boolean;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof TokenResponseCheckout
     */
    metadata?: {
        [key: string]: any;
    };
    /**
     * Indicates if the checkout allows monthly installments.
     * @type {boolean}
     * @memberof TokenResponseCheckout
     */
    monthlyInstallmentsEnabled?: boolean;
    /**
     * List of monthly installments options.
     * @type {Array<number>}
     * @memberof TokenResponseCheckout
     */
    monthlyInstallmentsOptions?: Array<number>;
    /**
     *
     * @type {string}
     * @memberof TokenResponseCheckout
     */
    name?: string;
    /**
     *
     * @type {boolean}
     * @memberof TokenResponseCheckout
     */
    needsShippingContact?: boolean;
    /**
     * Indicates the type of object, in this case checkout.
     * @type {string}
     * @memberof TokenResponseCheckout
     */
    object?: string;
    /**
     * Indicates if the checkout allows on demand payments.
     * @type {boolean}
     * @memberof TokenResponseCheckout
     */
    onDemandEnabled?: boolean;
    /**
     * Number of payments that have been paid.
     * @type {number}
     * @memberof TokenResponseCheckout
     */
    paidPaymentsCount?: number;
    /**
     * Indicates if the checkout is recurrent.
     * @type {boolean}
     * @memberof TokenResponseCheckout
     */
    recurrent?: boolean;
    /**
     *
     * @type {number}
     * @memberof TokenResponseCheckout
     */
    smsSent?: number;
    /**
     * Date and time when the checkout starts.
     * @type {number}
     * @memberof TokenResponseCheckout
     */
    startsAt?: number;
    /**
     * Status of the checkout.
     * @type {string}
     * @memberof TokenResponseCheckout
     */
    status?: string;
    /**
     * URL to redirect the customer to after the payment process is completed.
     * @type {string}
     * @memberof TokenResponseCheckout
     */
    successUrl?: string;
    /**
     * Type of checkout.
     * @type {string}
     * @memberof TokenResponseCheckout
     */
    type?: string;
}
/**
 * Check if a given object implements the TokenResponseCheckout interface.
 */
export declare function instanceOfTokenResponseCheckout(value: object): boolean;
export declare function TokenResponseCheckoutFromJSON(json: any): TokenResponseCheckout;
export declare function TokenResponseCheckoutFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenResponseCheckout;
export declare function TokenResponseCheckoutToJSON(value?: TokenResponseCheckout | null): any;
