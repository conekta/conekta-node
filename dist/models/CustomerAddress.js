"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerAddressToJSON = exports.CustomerAddressFromJSONTyped = exports.CustomerAddressFromJSON = exports.instanceOfCustomerAddress = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the CustomerAddress interface.
 */
function instanceOfCustomerAddress(value) {
    let isInstance = true;
    isInstance = isInstance && "street1" in value;
    isInstance = isInstance && "postalCode" in value;
    isInstance = isInstance && "city" in value;
    return isInstance;
}
exports.instanceOfCustomerAddress = instanceOfCustomerAddress;
function CustomerAddressFromJSON(json) {
    return CustomerAddressFromJSONTyped(json, false);
}
exports.CustomerAddressFromJSON = CustomerAddressFromJSON;
function CustomerAddressFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'street1': json['street1'],
        'street2': !(0, runtime_1.exists)(json, 'street2') ? undefined : json['street2'],
        'postalCode': json['postal_code'],
        'city': json['city'],
        'state': !(0, runtime_1.exists)(json, 'state') ? undefined : json['state'],
        'country': !(0, runtime_1.exists)(json, 'country') ? undefined : json['country'],
        'residential': !(0, runtime_1.exists)(json, 'residential') ? undefined : json['residential'],
        'externalNumber': !(0, runtime_1.exists)(json, 'external_number') ? undefined : json['external_number'],
    };
}
exports.CustomerAddressFromJSONTyped = CustomerAddressFromJSONTyped;
function CustomerAddressToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'street1': value.street1,
        'street2': value.street2,
        'postal_code': value.postalCode,
        'city': value.city,
        'state': value.state,
        'country': value.country,
        'residential': value.residential,
        'external_number': value.externalNumber,
    };
}
exports.CustomerAddressToJSON = CustomerAddressToJSON;
