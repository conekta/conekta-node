"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChargeOrderResponsePaymentMethodToJSON = exports.ChargeOrderResponsePaymentMethodFromJSONTyped = exports.ChargeOrderResponsePaymentMethodFromJSON = void 0;
const PaymentMethodBankTransfer_1 = require("./PaymentMethodBankTransfer");
const PaymentMethodCard_1 = require("./PaymentMethodCard");
const PaymentMethodCash_1 = require("./PaymentMethodCash");
function ChargeOrderResponsePaymentMethodFromJSON(json) {
    return ChargeOrderResponsePaymentMethodFromJSONTyped(json, false);
}
exports.ChargeOrderResponsePaymentMethodFromJSON = ChargeOrderResponsePaymentMethodFromJSON;
function ChargeOrderResponsePaymentMethodFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['object']) {
        case 'bank_transfer_payment':
            return Object.assign(Object.assign({}, (0, PaymentMethodBankTransfer_1.PaymentMethodBankTransferFromJSONTyped)(json, true)), { object: 'bank_transfer_payment' });
        case 'card_payment':
            return Object.assign(Object.assign({}, (0, PaymentMethodCard_1.PaymentMethodCardFromJSONTyped)(json, true)), { object: 'card_payment' });
        case 'cash_payment':
            return Object.assign(Object.assign({}, (0, PaymentMethodCash_1.PaymentMethodCashFromJSONTyped)(json, true)), { object: 'cash_payment' });
        default:
            throw new Error(`No variant of ChargeOrderResponsePaymentMethod exists with 'object=${json['object']}'`);
    }
}
exports.ChargeOrderResponsePaymentMethodFromJSONTyped = ChargeOrderResponsePaymentMethodFromJSONTyped;
function ChargeOrderResponsePaymentMethodToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['object']) {
        case 'bank_transfer_payment':
            return (0, PaymentMethodBankTransfer_1.PaymentMethodBankTransferToJSON)(value);
        case 'card_payment':
            return (0, PaymentMethodCard_1.PaymentMethodCardToJSON)(value);
        case 'cash_payment':
            return (0, PaymentMethodCash_1.PaymentMethodCashToJSON)(value);
        default:
            throw new Error(`No variant of ChargeOrderResponsePaymentMethod exists with 'object=${value['object']}'`);
    }
}
exports.ChargeOrderResponsePaymentMethodToJSON = ChargeOrderResponsePaymentMethodToJSON;
