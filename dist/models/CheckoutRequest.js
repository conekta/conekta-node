"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutRequestToJSON = exports.CheckoutRequestFromJSONTyped = exports.CheckoutRequestFromJSON = exports.instanceOfCheckoutRequest = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the CheckoutRequest interface.
 */
function instanceOfCheckoutRequest(value) {
    let isInstance = true;
    isInstance = isInstance && "allowedPaymentMethods" in value;
    return isInstance;
}
exports.instanceOfCheckoutRequest = instanceOfCheckoutRequest;
function CheckoutRequestFromJSON(json) {
    return CheckoutRequestFromJSONTyped(json, false);
}
exports.CheckoutRequestFromJSON = CheckoutRequestFromJSON;
function CheckoutRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'allowedPaymentMethods': json['allowed_payment_methods'],
        'expiresAt': !(0, runtime_1.exists)(json, 'expires_at') ? undefined : json['expires_at'],
        'failureUrl': !(0, runtime_1.exists)(json, 'failure_url') ? undefined : json['failure_url'],
        'monthlyInstallmentsEnabled': !(0, runtime_1.exists)(json, 'monthly_installments_enabled') ? undefined : json['monthly_installments_enabled'],
        'monthlyInstallmentsOptions': !(0, runtime_1.exists)(json, 'monthly_installments_options') ? undefined : json['monthly_installments_options'],
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'onDemandEnabled': !(0, runtime_1.exists)(json, 'on_demand_enabled') ? undefined : json['on_demand_enabled'],
        'successUrl': !(0, runtime_1.exists)(json, 'success_url') ? undefined : json['success_url'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
    };
}
exports.CheckoutRequestFromJSONTyped = CheckoutRequestFromJSONTyped;
function CheckoutRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'allowed_payment_methods': value.allowedPaymentMethods,
        'expires_at': value.expiresAt,
        'failure_url': value.failureUrl,
        'monthly_installments_enabled': value.monthlyInstallmentsEnabled,
        'monthly_installments_options': value.monthlyInstallmentsOptions,
        'name': value.name,
        'on_demand_enabled': value.onDemandEnabled,
        'success_url': value.successUrl,
        'type': value.type,
    };
}
exports.CheckoutRequestToJSON = CheckoutRequestToJSON;
