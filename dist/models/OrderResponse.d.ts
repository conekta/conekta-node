/**
 * Conekta API
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ChargeOrderResponseChannel } from './ChargeOrderResponseChannel';
import type { OrderResponseCharges } from './OrderResponseCharges';
import type { OrderResponseCheckout } from './OrderResponseCheckout';
import type { OrderResponseCustomerInfo } from './OrderResponseCustomerInfo';
import type { OrderResponseDiscountLines } from './OrderResponseDiscountLines';
import type { OrderResponseFiscalEntity } from './OrderResponseFiscalEntity';
import type { OrderResponseProducts } from './OrderResponseProducts';
import type { OrderResponseShippingContact } from './OrderResponseShippingContact';
/**
 * order response
 * @export
 * @interface OrderResponse
 */
export interface OrderResponse {
    /**
     * The total amount to be collected in cents
     * @type {number}
     * @memberof OrderResponse
     */
    amount?: number;
    /**
     * The total amount refunded in cents
     * @type {number}
     * @memberof OrderResponse
     */
    amountRefunded?: number;
    /**
     *
     * @type {ChargeOrderResponseChannel}
     * @memberof OrderResponse
     */
    channel?: ChargeOrderResponseChannel;
    /**
     *
     * @type {OrderResponseCharges}
     * @memberof OrderResponse
     */
    charges?: OrderResponseCharges;
    /**
     *
     * @type {OrderResponseCheckout}
     * @memberof OrderResponse
     */
    checkout?: OrderResponseCheckout;
    /**
     * The time at which the object was created in seconds since the Unix epoch
     * @type {number}
     * @memberof OrderResponse
     */
    createdAt?: number;
    /**
     * The three-letter ISO 4217 currency code. The currency of the order.
     * @type {string}
     * @memberof OrderResponse
     */
    currency?: string;
    /**
     *
     * @type {OrderResponseCustomerInfo}
     * @memberof OrderResponse
     */
    customerInfo?: OrderResponseCustomerInfo;
    /**
     *
     * @type {OrderResponseDiscountLines}
     * @memberof OrderResponse
     */
    discountLines?: OrderResponseDiscountLines;
    /**
     *
     * @type {OrderResponseFiscalEntity}
     * @memberof OrderResponse
     */
    fiscalEntity?: OrderResponseFiscalEntity;
    /**
     *
     * @type {string}
     * @memberof OrderResponse
     */
    id?: string;
    /**
     *
     * @type {boolean}
     * @memberof OrderResponse
     */
    isRefundable?: boolean;
    /**
     *
     * @type {OrderResponseProducts}
     * @memberof OrderResponse
     */
    lineItems?: OrderResponseProducts;
    /**
     * Whether the object exists in live mode or test mode
     * @type {boolean}
     * @memberof OrderResponse
     */
    livemode?: boolean;
    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     * @type {{ [key: string]: any; }}
     * @memberof OrderResponse
     */
    metadata?: {
        [key: string]: any;
    };
    /**
     * String representing the objectâ€™s type. Objects of the same type share the same value.
     * @type {string}
     * @memberof OrderResponse
     */
    object?: string;
    /**
     * The payment status of the order.
     * @type {string}
     * @memberof OrderResponse
     */
    paymentStatus?: string;
    /**
     *
     * @type {OrderResponseShippingContact}
     * @memberof OrderResponse
     */
    shippingContact?: OrderResponseShippingContact;
    /**
     * The time at which the object was last updated in seconds since the Unix epoch
     * @type {number}
     * @memberof OrderResponse
     */
    updatedAt?: number;
}
/**
 * Check if a given object implements the OrderResponse interface.
 */
export declare function instanceOfOrderResponse(value: object): boolean;
export declare function OrderResponseFromJSON(json: any): OrderResponse;
export declare function OrderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderResponse;
export declare function OrderResponseToJSON(value?: OrderResponse | null): any;
